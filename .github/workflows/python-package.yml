# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches:
      - master
    tags: [ 'v*' ]
  pull_request:
    branches:
      - master
  schedule:
    - cron:  '0 6 * * 1'  # Weekly Mon 6AM UTC build


jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        git fetch --tags
        sudo apt-get install -y libsqliteodbc unixodbc
        odbcinst -j
        cat /etc/odbcinst.ini
        python -m pip install --upgrade pip
        python -m pip install codecov
        pip install -r requirements-dev.txt
    - name: Lint
      run: |
          make lint
          make checkfmt
          make mypy

    - name: Test
      run: |
        make cov
        make run_examples

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test
    # Run only on pushing a tag
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run:
        python -m pip install -U pip wheel twine build
    - name: Make dists
      run:
        python -m build
    - name: PyPI upload
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload dist/* --verbose
